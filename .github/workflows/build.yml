name: Build

on: [push]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Get OCCT Source
      uses: actions/checkout@v2
      
    - name: Download FreeType Binary
      uses: carlosperate/download-file-action@v1.0.3
      id: freetype-binary
      with:
        file-url: 'https://download.savannah.gnu.org/releases/freetype/freetype-2.5.3.tar.gz'
        file-name: "freetype.tar.gz"
        location: "3rdparty"
    - name: Untar FreeType
      run: |
        New-Item -Name "freetype" -ItemType "directory"
        tar xzvf ${{ steps.freetype-binary.outputs.file-path }} --directory ./3rdparty
        
    - name: Get Tcl Source
      uses: actions/checkout@v2
      with:
        repository: tcltk/tcl
        ref: core-8-6-11
        path: ./3rdparty/tcl
    
    - name: Get Tk Source
      uses: actions/checkout@v2
      with:
        repository: tcltk/tk
        ref: core-8-6-11-1
        path: "./3rdparty/tk"
    
    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: What have we got?
      run: |
        Get-ChildItem -Path .
        Get-ChildItem -Path 3rdparty
        Get-ChildItem -Path 3rdparty/tcl
        Get-ChildItem -Path 3rdparty/tk
#        Get-ChildItem -Path StirlingLabs/Tcl
#        Get-ChildItem -Path StirlingLabs/Tk
    
    - name: Move OCCT-Modified Tcl files
      run: |
        Copy-Item -Path ./StirlingLabs/Tcl/* -Destination 3rdparty/tcl -force
        Copy-Item -Path ./StirlingLabs/Tk/* -Destination 3rdparty/tk -force

    - name: Build Tcl
      run: .\3rdparty\tcl\buildall.vc.bat
      env:
        INSTALLDIR: 3rdparty

    - name: Build Tk
      run: 3rdparty\tk\buildall.vc.bat
      env:
        INSTALLDIR: 3rdparty

    - name: What have we got?
      run: |
        Get-ChildItem -Path 3rdparty
    
    - name: Build OCCT
      run: |
        mkdir build
        cd build
        ccmake .. -DCMAKE_BUILD_TYPE=Release


      
#    - name: Restore NuGet packages
#      working-directory: ${{env.GITHUB_WORKSPACE}}
#      run: nuget restore ${{env.SOLUTION_FILE_PATH}}

#    - name: Build
#      working-directory: ${{env.GITHUB_WORKSPACE}}
#      # Add additional options to the MSBuild command line here (like platform or verbosity level).
#      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
#      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}
